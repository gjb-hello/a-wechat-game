{"version":3,"sources":["assets\\scipts\\joystickbg.js"],"names":["Common","require","cc","Class","Component","properties","dot","type","Node","displayName","_joyCom","_playerNode","_angle","_radian","_speed","_speed1","_speed2","_opacity","onLoad","node","parent","getComponent","sprite","touchType","TouchType","DEFAULT","_initTouchEvent","self","on","EventType","TOUCH_START","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","update","dt","directionType","DirectionType","ALL","_allDirectionsMove","x","Math","cos","PI","y","sin","_getDistance","pos1","pos2","sqrt","pow","_getRadian","point","_getAngle","pos","getPosition","atan2","_setSpeed","distance","_radius","event","touchPos","convertToNodeSpaceAR","getLocation","Vec2","radius","width","_stickPos","posX","posY","setPosition"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Common = require('joystickcommon');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dot: {\r\n            default: null,\r\n            type: cc.Node,\r\n            displayName: 'dot',\r\n        },\r\n\r\n        _joyCom: {\r\n            default: null,\r\n            displayName: 'joy Node',\r\n\r\n        },\r\n        _playerNode: {\r\n            default: null,\r\n            displayName: '��������Ŀ��Node',\r\n        },\r\n\r\n        _angle: {\r\n            default: null,\r\n            displayName: '��ǰ�����ĽǶ�',\r\n\r\n        },\r\n\r\n        _radian: {\r\n            default: null,\r\n            displayName: '����',\r\n        },\r\n\r\n\r\n        _speed: 0,          //ʵ���ٶ�\r\n        _speed1: 1,         //һ���ٶ�\r\n        _speed2: 2,         //�����ٶ�\r\n        _opacity: 0,        //͸����\r\n    },\r\n\r\n\r\n    onLoad: function()\r\n    {\r\n        // joy�µ�Game���\r\n        this._joyCom = this.node.parent.getComponent('joystick');\r\n\r\n\r\n        // game����µ�player�ڵ�\r\n        this._playerNode = this._joyCom.sprite;\r\n\r\n        if(this._joyCom.touchType == Common.TouchType.DEFAULT){\r\n            //��ԲȦ�Ĵ�������\r\n            this._initTouchEvent();\r\n        }\r\n    },\r\n\r\n\r\n    //��ԲȦ�Ĵ�������\r\n    _initTouchEvent: function()\r\n    {\r\n        var self = this;\r\n\r\n        self.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, self);\r\n\r\n        self.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, self);\r\n\r\n        // ������ԲȦ���뿪����ԲȦ���뿪��ҡ�˹�λ��player�ٶ�Ϊ0\r\n        self.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, self);\r\n        self.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, self);\r\n    },\r\n\r\n    //�����ƶ�Ŀ��\r\n    update: function(dt)\r\n    {\r\n        switch (this._joyCom.directionType)\r\n        {\r\n            case Common.DirectionType.ALL:\r\n                this._allDirectionsMove();\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    },\r\n     //ȫ�����ƶ�\r\n    _allDirectionsMove: function()\r\n    {\r\n        this._playerNode.x += Math.cos(this._angle * (Math.PI/180)) * this._speed;\r\n        this._playerNode.y += Math.sin(this._angle * (Math.PI/180)) * this._speed;\r\n\r\n    },\r\n\r\n     //���������ľ��벢����\r\n    _getDistance: function(pos1, pos2)\r\n    {\r\n        return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) +\r\n        Math.pow(pos1.y - pos2.y, 2));\r\n    },\r\n\r\n    /*�Ƕ�/����ת��\r\n    �Ƕ� = ���� * 180 / Math.PI\r\n    ���� = �Ƕ� * Math.PI / 180*/\r\n    //���㻡�Ȳ�����\r\n    _getRadian: function(point)\r\n    {\r\n        this._radian = Math.PI / 180 * this._getAngle(point);\r\n        return this._radian;\r\n    },\r\n\r\n    //����ǶȲ�����\r\n    _getAngle: function(point)\r\n    {\r\n\r\n        var pos = this.node.getPosition();\r\n        this._angle = Math.atan2(point.y - pos.y, point.x - pos.x) * (180/Math.PI);\r\n        return this._angle;\r\n    },\r\n\r\n     //����ʵ���ٶ�\r\n    _setSpeed: function(point)\r\n    {\r\n        //�������ң�ظ����ĵľ���\r\n        var distance = this._getDistance(point, this.node.getPosition());\r\n\r\n        //����뾶\r\n        if(distance < this._radius)\r\n        {\r\n            this._speed = this._speed1;\r\n        }\r\n        else\r\n        {\r\n            this._speed = this._speed2;\r\n        }\r\n    },\r\n\r\n    _touchStartEvent: function(event) {\r\n        // ��ȡ����λ�õ���������ת����ԲȦ��������꣨��ԲȦ��ê��Ϊ��׼��\r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        //��������ԲȦ���ĵľ���\r\n        var distance = this._getDistance(touchPos,cc.Vec2(0,0));\r\n        //ԲȦ�뾶\r\n        var radius = this.node.width / 2;\r\n        // ��¼ҡ��λ�ã���touch moveʹ��\r\n        this._stickPos = touchPos;\r\n        var posX = this.node.getPosition().x + touchPos.x;\r\n        var posY = this.node.getPosition().y + touchPos.y;\r\n         //��ָ��ԲȦ�ڴ���,�ظ˸��津����\r\n        if(radius > distance)\r\n        {\r\n            this.dot.setPosition(cc.Vec2(posX, posY));\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    _touchMoveEvent: function(event){\r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        var distance = this._getDistance(touchPos,cc.Vec2(0,0));\r\n        var radius = this.node.width / 2;\r\n        // ����ҡ�˵�postion���Ը��ڵ�Ϊê�㣬���Զ�λҪ����ring��dot��ǰ��λ��(stickX,stickY)\r\n        var posX = this.node.getPosition().x + touchPos.x;\r\n        var posY = this.node.getPosition().y + touchPos.y;\r\n        if(radius > distance)\r\n        {\r\n            this.dot.setPosition(cc.Vec2(posX, posY));\r\n        }\r\n        else\r\n        {\r\n            //�ظ���Զ������Ȧ�ڣ�����Ȧ�ڸ��津�����½Ƕ�\r\n            var x = this.node.getPosition().x + Math.cos(this._getRadian(cc.Vec2(posX,posY))) * radius;\r\n            var y = this.node.getPosition().y + Math.sin(this._getRadian(cc.Vec2(posX,posY))) * radius;\r\n            this.dot.setPosition(cc.Vec2(x, y));\r\n        }\r\n        //���½Ƕ�\r\n        this._getAngle(cc.Vec2(posX,posY));\r\n        //����ʵ���ٶ�\r\n        this._setSpeed(cc.Vec2(posX,posY));\r\n\r\n    },\r\n\r\n    _touchEndEvent: function(){\r\n        this.dot.setPosition(this.node.getPosition());\r\n        this._speed = 0;\r\n    },\r\n});\r\n"]}