{"version":3,"sources":["assets\\scipts\\map.js"],"names":["node","Array","Flag","nodeflag_num","tileSize","cc","Class","Component","properties","onLoad","console","log","player_now","getChildByName","loadMap","schedule","newTile","getTilePos","tryMoveToNewTile","mapSize","tiledMap","getMapSize","x","width","y","height","ground","getTileGIDAt","tryenclosure","playerTile","updatePlayerPos","i","j","k","dfs","setTileGIDAt","setPosition","visibleRect","bottomLeft","getComponent","TiledMap","player","getObjectGroup","birth_point_1","getObject","startPos","v2","getLayer","posInPixel","getContentSize","getTileSize","Math","floor","pos","getPositionAt"],"mappings":"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","sourceRoot":"/","sourcesContent":["var node = new Array()    //��ɫ����\r\nvar Flag = new Array(100)//��ͨƬ��Ŀ���Ϊ30������˴����������ֵ\r\n                            //��i����ͨƬ�Ƿ�������ڵı�ǣ�Ϊ0����\r\n\r\nvar nodeflag_num            //��ͨƬ�����ļ���\r\nvar tileSize                //��ͼ��С\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        console.log(\"onLoad\");\r\n        this.player_now = this.node.getChildByName('player_now');\r\n        //��ȡplayer_now�ڵ�\r\n        //console.log(this.player_now)\r\n        this.loadMap();\r\n        //���ص�ͼ\r\n\r\n\r\n        //this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        //����¼�\r\n\r\n\r\n        //��0.1sִ��һ��\r\n        this.schedule(function() {\r\n        // ����� this ָ�� component\r\n        //console.log(\"after 0.5s\");\r\n\r\n        var newTile=this.getTilePos(this.player_now);\r\n        this.tryMoveToNewTile(newTile);\r\n        }, 0.1);\r\n    },\r\n\r\n\r\n    tryMoveToNewTile: function (newTile) {\r\n        var mapSize = this.tiledMap.getMapSize();\r\n\r\n        //�����߽磬ֱ�ӷ���\r\n        if (newTile.x < 0 || newTile.x >= mapSize.width) return;\r\n        if (newTile.y < 0 || newTile.y >= mapSize.height) return;\r\n\r\n        //console.log(this.ground.getTileGIDAt(newTile))\r\n        //1������,2�Ƿ�����\r\n        //this.ground.setTileGIDAt(1,newTile.x,newTile.y)\r\n\r\n\r\n        if (this.ground.getTileGIDAt(newTile) == 1)\r\n        //�����ǰλ�����������ص�������Ȧ��\r\n            this.tryenclosure();//����Ȧ��\r\n        this.playerTile = newTile;\r\n        this.updatePlayerPos();\r\n    },\r\n\r\n    tryenclosure: function () {\r\n        console.log(\"start enclosure process\")\r\n        //var Node_A = new Array();\r\n        nodeflag_num = 1;//��ͨƬ�����ļ���\r\n        for (var i = 0; i < tileSize.height; i++) {\r\n            node[i] = new Array();\r\n            for (var j = 0; j < tileSize.width; j++) {\r\n                node[i][j] = new Array();\r\n                for (var k = 0; k < 3; k++)\r\n                    node[i][j][k] = new Array();\r\n            }\r\n        }//�൱����Node_A[height][width][3]\r\n        //Node_A[height][width][0]��ʶ�õ������黹�Ƿ�����\r\n        //[1]��ʶ�õ�����һ����ͨƬ\r\n\r\n        for (var i = 0; i < 100; i++)\r\n            Flag[i] = 0;\r\n        //��ȡ������ͼ����ɫ��Ϣ\r\n        for (var i = 0; i < tileSize.height-1; i++) {\r\n            for (var j = 0; j < tileSize.width-1; j++) {\r\n                node[i][j][0] = 0;\r\n                node[i][j][1] = 0;\r\n                if (this.ground.getTileGIDAt(i,j) == 1)\r\n                    node[i][j][0] = 1;\r\n            }\r\n        }\r\n\r\n        //������������������\r\n        //�ֱ������������Ѱ�����������������\r\n        for (var i = 0; i < tileSize.height; i++) {\r\n            for (var j = 0; j < tileSize.width; j++) {\r\n                //console.log(i+\" \"+j+\"node\"+node[i][j][0])\r\n                if (node[i][j][0] == 0 && node[i][j][1] == 0) {\r\n                    //console.log(i+\"@@@\")\r\n                    //��δͿʵɫ�Ҳ�����֮ǰ�κ���ͨƬ���Ӵ˵���������ͨƬ\r\n                    this.dfs(i, j);\r\n                    nodeflag_num=nodeflag_num+1;\r\n                }\r\n            }\r\n        }\r\n        //console.log(\"!\")\r\n        //�����б���ͨƬͿʵ\r\n        for (var i = 0; i < tileSize.height; i++) {\r\n            for (var j = 0; j < tileSize.width; j++) {\r\n                //console.log(i + \" \" + j + \" \" + node[i][j][1] + \" \" + Flag[node[i][j][1]])\r\n                if (node[i][j][1] != 0 && Flag[node[i][j][1]] == 0) {\r\n                    console.log(\"enclosure\")\r\n                    this.ground.setTileGIDAt(1, i, j)\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    //��������\r\n    dfs:function(x, y) {\r\n        //console.log(\"!!!\")\r\n        if (node[x][y][0] == 1)//�����Լ��ı�\r\n            return;\r\n        if (node[x][y][1] != 0)//���ظ�����\r\n            return;\r\n        if (x == 0 || x == tileSize.width-1 || y == tileSize.height-1 || y == 0) {\r\n            Flag[nodeflag_num] = 1;//�ܵ���߽磬���Ǳպ���ͨƬ\r\n            return;\r\n        }\r\n        node[x][y][1] = nodeflag_num;\r\n        //console.log(x + \" \" + y + \" \" + nodeflag_num)\r\n        this.dfs(x + 1, y)\r\n        this.dfs(x - 1,y)\r\n        this.dfs(x, y - 1)\r\n        this.dfs(x, y + 1)\r\n        return;\r\n    },\r\n\r\n\r\n    /*\r\n    //����¼�\r\n    onMouseDown: function (event) {\r\n        var click_pos = event.getLocation();\r\n        var click_posTile = this.getTilePos(click_pos);\r\n        var newTile = cc.v2(this.playerTile.x, this.playerTile.y);\r\n        if (click_posTile.x > newTile.x)      { newTile.x += 1; }\r\n        else if (click_posTile.x < newTile.x) { newTile.x -= 1; }\r\n        else if (click_posTile.y > newTile.y) { newTile.y += 1; }\r\n        else if (click_posTile.y < newTile.y) { newTile.y -= 1; }\r\n        this.tryMoveToNewTile(newTile);\r\n    },\r\n    */\r\n\r\n    //���ص�ͼ�ļ�ʱ����\r\n    loadMap: function () {\r\n        console.log(\"loadmap\");\r\n        //��ʼ����ͼλ��\r\n        this.node.setPosition(cc.visibleRect.bottomLeft);\r\n\r\n        //��ͼ\r\n        this.tiledMap = this.node.getComponent(cc.TiledMap);\r\n\r\n        //player�����\r\n        var player = this.tiledMap.getObjectGroup('player');\r\n\r\n        var birth_point_1 = player.getObject('birth_point_1');\r\n\r\n        console.log(\"1\");\r\n        //��������\r\n        var startPos = cc.v2(birth_point_1.x, birth_point_1.y);\r\n        console.log(\"startPos\"+startPos);\r\n\r\n        this.ground = this.tiledMap.getLayer('ground');\r\n\r\n        //����Tile\r\n        this.playerTile = this.getTilePos(startPos);\r\n        console.log(\"start tile\"+this.playerTile)\r\n        //����playerλ��\r\n        this.updatePlayerPos();\r\n\r\n        tileSize = this.tiledMap.getMapSize();;//��ͼ��С�洢��tileSize������\r\n    },\r\n\r\n\r\n    //����������ת��Ϊ��Ƭ����\r\n    getTilePos: function (posInPixel) {\r\n        var mapSize = this.node.getContentSize();\r\n        var tileSize = this.tiledMap.getTileSize();\r\n        var x = Math.floor(posInPixel.x / tileSize.width);\r\n        var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);\r\n        return cc.v2(x, y);\r\n    },\r\n\r\n    updatePlayerPos: function () {\r\n        //var pos = this.barriers.getPositionAt(this.playerTile);\r\n        var pos = this.ground.getPositionAt(this.playerTile);\r\n        this.ground.setTileGIDAt(1, this.playerTile.x, this.playerTile.y)\r\n        //����߹���·��\r\n\r\n        //this.player_now.setPosition(pos);\r\n        //console.log(this.player_now.x);\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}